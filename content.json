{"posts":[{"title":"什么是Java","text":"本篇文章对应的Issues 维基百科中的Java 维基百科中的Java Java是一个高层次的(high-leve)、以类为基础的(class-based)、面向对象的(object-oriented)编程语言。Java的宗旨是一次编写，随处运行。也就是编译后的Java代码可以在所有支持Java的平台上运行，无需再重新编译。 Java 官网中的什么是Java https://www.java.com/download/help/whatis_java.html Java 发展历史","link":"/2022/07/24/Java%E5%9F%BA%E7%A1%80/001-%E4%BB%80%E4%B9%88%E6%98%AFJava/"},{"title":"Java基础 - 基本数据类型","text":"本篇文章对应的Issues 什么是变量变量的定义我们由一个停车场示例来讲解什么是变量。在C镇有很多停车场，小区停车场和公共停车场，停车场内根据不同大小的车辆划分了不同的停车位（大中小）。车辆停放必须根据车子的尺寸停放，先定义停车场的规则： 小区内的停车场只能停放该小区的车辆 小区外的公共停车场允许多个小区停放 车辆必须根据车子的尺寸严格停放到对应的车位中 将示例中各个角色和我们今天的变量对应停车场 -&gt; 变量 汽车 -&gt; 变量中的值公共停车场 —&gt; 成员变量小区内停车场 -&gt; 局部变量不同尺寸停车位 -&gt; Java中数据类型根据代码再来看看什么是变量： 1234567891011public class Variable { public static void main(String[] args) { int a; // 定义一个int类型的变量 a int x, y; // 定义两个int类型的变量 x 和 y int c = 1, d = 2; // 定义变量 c 赋值 1 和变量 d 赋值 2 a = 0; // 给 a 赋值 0 a = 1; // 把 a 的值变为 1 }} 从上面代码中可以看出定义一个变量首先要确定变量的类型，再给变量起个好听的名字，最后给变量赋值。变量为什么叫 “变”量，是因为他是可以改变的，也就是可以重新赋值。看例子。 12345678910public class Variable { public static void main(String[] args) { int i = 10; // 定义一个 int 类型变量并赋值为 10 System.out.println(i); // 打印 这个变量 输出 10 i = 11; // 重新赋值 11 System.out.println(i); // 打印 这个变量 输出 11 i 是可以重新赋值的 }} 变量的作用范围成员变量和局部变量最大的区别是作用范围不一样 1234567891011121314public class Variable { public static void main(String[] args) { int i = 10; if (true) { int b = 20; System.out.println(num); System.out.println(i); System.out.println(b); } // System.out.println(b); 编译报错 b 不在这个括号的作用范围内 }} 上述代码中 i 的作用范围在他所在大括号内b 的作用范围在他所在大括号内 i 的作用范围要比 b 的作用范围更广。 Java中基本数据类型 对应代码 -&gt; com.codedm.java.basic.datatype.PrimitiveDataTypeJava中有8种基本数据类型： byte存储从 -128 到 127 的整数 占用字节数： 1 byte short存储从 -32,768 到 32,767 的整数 占用字节数： 2 byte int存储从 -2,147,483,648 到 2,147,483,647 的整数 占用字节数： 4 byte long存储从 -9,223,372,036,854,775,808 到 9,223,372,036,854,775,807 的整数 占用字节数： 8 byte float存储一个分数，能够储存6至7位的小数 占用字节数： 4 byte double存储一个分数，能够储存15位的小数 占用字节数： 8 byte boolean存储一个 true 和 false 占用字节数： 1 bit char存储单个字符 占用字节数： 2 byte","link":"/2022/07/28/Java%E5%9F%BA%E7%A1%80/004-Java%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"},{"title":"Java基础 - Java安装教程","text":"本篇文章对应的Issues 下载JDK下载地址 下载最新版本JDK不用登录账号，但是下载JDK1.8需要登录账号，如果不想注册，可以使用我提供的账号（贴心不 :smirk: ）。 121414807686@qq.comCodedm96@codedm.com 下载页面往下拉可以看见Java8，根据您不同系统下载不同版本的JDK。 Windows安装JDK 双击打开安装包 点击下一步 点击下一步 点击下一步 设置中搜索 环境变量 -&gt; 点击编辑系统环境变量 -&gt; 点击环境变量 点击新建 新建Java Home 默认安装路径：C:\\Program Files\\Java\\ 下面的变量值建议到这个文件夹中复制，小版本号可能会存在差异。 变量名：JAVA_HOME变量值：C:\\Program Files\\Java\\jdk1.8.0_341 新建CLASSPATH 变量名：CLASSPATH变量值：.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar; 修改Path(注意是修改) 修改界面点击新建 新建两个： 12%JAVA_HOME%\\bin%JAVA_HOME%\\jre\\bin 所有窗口点击确定 MacOS安装JDK 下载完成之后双击打开，再双击黄色盒子 点击继续 -&gt; 点击安装 -&gt; 点击关闭 配置环境变量 打开终端输入下面命令 vim .zshrc 按下 i 键，再粘贴输入(注意修改成你自己的路径)： 1234567891011121314JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_341.jdk/Contents/HomePATH=$JAVA_HOME/bin:$PATH:.CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:.export JAVA_HOMEexport PATHexport CLASSPATH````&gt; 注意修改成你自己的版本号jdk1.8.0_341.jdk按键盘 esc -&gt; 输入 :wq -&gt; 回车再输入命令 source .zshrc 12345678910 &gt; 默认安装路径为： /Library/Java/JavaVirtualMachines/jdk1.8.0_341.jdk/Contents/Home## Linux安装JDK## 测试安装命令行输入： java -version 123显示出版本号则证明安装成功。 java version “1.8.0_341”Java(TM) SE Runtime Environment (build 1.8.0_341-b10)Java HotSpot(TM) 64-Bit Server VM (build 25.341-b10, mixed mode) 123命令行输入java以及javac均不报错： java 123以及 javac ```","link":"/2022/07/25/Java%E5%9F%BA%E7%A1%80/002-Java%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"},{"title":"第一个Java程序 - Hello World","text":"本篇文章对应的Issues前两篇文章我们了解了什么是Java以及Java在各个平台的安装过程，这篇起，我们开始快乐的写Java代码，做一个Java程序员。 新建class文件首先随便找一个地方新建一个HelloWorld.java文件，然后用记事本打开他，Mac环境可以使用文本编辑器。然后一个字母一个字母打出下面的代码(不准复制。。)： 123456public class HelloWorld { public static void main(String[] args) { System.out.println(&quot;Hello World&quot;); }} 命令行式运行在当前文件夹下打开命令行工具，Windows 打开CMD，Mac打开终端。输入命令 1javac HelloWorld.java 没有报错，没有出现异常。文件夹中出现HelloWorld.class文件，这是javac编译后的可运行文件。执行class文件： 1java HelloWorld 控制台会打印出HelloWorld，程序运行成功。 Idea开发工具运行下载安装Idea（略过，自己百度去），我还是给你们留了一个教程连接：安装教程安装教程创建完一个project，在project的src/main/java下创建一个类，命名HelloWorld。输入代码点击绿色箭头运行，下方控制台会出现我们程序要求打印的Hello World 代码讲解 注释常用注释两种 1234567单行注释 // 多行注释/** * 我的第一个Java程序 * * @author Code-dm */ 类（class）类名必须和文件名一样。暂时先理解为一个代码容器，后续的面向对象会详细讲解。 Main方法public static void main(String[] args)程序的主入口，一个程序只能有一个主入口。且每个程序都必须包含一个 main() 方法。 打印System.out.println()可以将字符串打印到控制台中。 System是Java核心库中的一个类 out是控制输出的对象 println()接收一个字符串并通过write输出到控制台","link":"/2022/07/26/Java%E5%9F%BA%E7%A1%80/003-%E7%AC%AC%E4%B8%80%E4%B8%AAJava%E7%A8%8B%E5%BA%8F%20-%20Hello%20World.md/"}],"tags":[],"categories":[{"name":"Java基础","slug":"Java基础","link":"/categories/Java%E5%9F%BA%E7%A1%80/"}],"pages":[]}